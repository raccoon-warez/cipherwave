{"version":3,"mappings":"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","names":["CapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","createCapacitorPlatforms","initPlatforms","globalThis","self","window","ExceptionCode","CapacitorException","Error","constructor","message","code","data","super","this","createCapacitor","_a","_b","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","cap","Capacitor","Plugins","getPlatform","androidBridge","webkit","messageHandlers","bridge","getPlatformId","isNativePlatform","isPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","PluginHeaders","find","h","registerPlugin","jsImplementations","registeredPlugin","console","warn","concat","proxy","pluginHeader","jsImplementation","createPluginMethodWrapper","prop","remove","wrapper","args","p","async","loadPluginImplementation","then","impl","fn","bind","Unimplemented","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","createPluginMethod","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","Promise","resolve","Proxy","_","Set","keys","convertFileSrc","filePath","handleError","err","error","pluginMethodNoop","_target","reject","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","WebPlugin","config","listeners","retainedEventArguments","windowListeners","listenerFunc","firstListener","push","windowListener","registered","addWindowListener","sendRetainedArgumentsForEvent","removeAllListeners","listener","removeWindowListener","notifyListeners","retainUntilConsumed","forEach","hasListeners","length","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","arg","encode","str","encodeURIComponent","replace","decodeURIComponent","escape","decode","CapacitorCookiesPluginWeb","getCookies","cookies","document","cookie","cookieMap","split","key","trim","setCookie","encodedKey","encodedValue","expires","path","domain","url","deleteCookie","clearCookies","Date","toUTCString","clearAllCookies","web","buildRequestInit","extra","output","assign","method","headers","type","originalKeys","map","k","toLocaleLowerCase","reduce","acc","normalizeHttpHeaders","body","includes","params","URLSearchParams","entries","FormData","form","append","Headers","delete","JSON","stringify","CapacitorHttpPluginWeb","request","requestInit","webFetchExtra","urlParams","shouldEncode","accumulator","entry","item","Array","isArray","slice","substr","buildUrlParams","shouldEncodeUrlParams","response","fetch","contentType","blob","responseType","ok","reader","FileReader","onload","base64String","result","onerror","readAsDataURL","readBlobAsBase64","json","text","status","post","put","patch","SplashScreen","__vitePreload","__VITE_PRELOAD__","SplashScreenWeb","Style","Animation","StatusBar","mobileManager","isInitialized","backgroundMode","pushNotifications","hapticFeedback","log","initialize","configureStatusBar","hideSplashScreen","setupMobileUI","setupAppLifecycle","setupHardwareBackButton","setStyle","style","Dark","setBackgroundColor","color","show","hide","classList","add","disableZoomOnInputs","setupTouchOptimizations","addSafeAreaSupport","viewport","querySelector","setAttribute","querySelectorAll","input","fontSize","createElement","textContent","head","appendChild","root","documentElement","setProperty","hidden","onAppBackground","onAppForeground","onAppPause","onAppResume","e","preventDefault","handleHardwareBackButton","overlays","topOverlay","closeButton","click","cipherWave","isConnected","showExitConfirmation","exitApp","confirmation","className","innerHTML","setTimeout","parentElement","disconnect","navigator","app","reduceBackgroundActivity","resumeNormalActivity","savePendingData","restoreAppState","connectionManager","messageInput","getElementById","localStorage","setItem","draftMessage","getItem","removeItem","Haptics","ImpactStyle","styles","light","Light","medium","Medium","heavy","Heavy","impact","showToast","duration","Toast","showWebToast","toast","cssText","animation","getDeviceInfo","userAgent","width","innerWidth","height","innerHeight","pixelRatio","devicePixelRatio","language","online","onLine","supportsFeature","feature","webrtc","RTCPeerConnection","websocket","WebSocket","notifications","geolocation","mediaDevices","getUserMedia","serviceWorker","indexedDB","destroy","_options"],"ignoreList":[0,1,2,3,5],"sources":["../../node_modules/@capacitor/core/dist/index.js","../../node_modules/@capacitor/splash-screen/dist/esm/index.js","../../node_modules/@capacitor/status-bar/dist/esm/definitions.js","../../node_modules/@capacitor/status-bar/dist/esm/index.js","../../src/managers/mobile-manager.js","../../node_modules/@capacitor/splash-screen/dist/esm/web.js"],"sourcesContent":["/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!(config === null || config === void 0 ? void 0 : config.name)) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.data = data;\n    }\n}\nconst getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n\nconst createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nconst initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n\nconst Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.retainedEventArguments = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        let firstListener = false;\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n            firstListener = true;\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        if (firstListener) {\n            this.sendRetainedArgumentsForEvent(eventName);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data, retainUntilConsumed) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            if (retainUntilConsumed) {\n                let args = this.retainedEventArguments[eventName];\n                if (!args) {\n                    args = [];\n                }\n                args.push(data);\n                this.retainedEventArguments[eventName] = args;\n            }\n            return;\n        }\n        listeners.forEach(listener => listener(data));\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n    sendRetainedArgumentsForEvent(eventName) {\n        const args = this.retainedEventArguments[eventName];\n        if (!args) {\n            return;\n        }\n        delete this.retainedEventArguments[eventName];\n        args.forEach(arg => {\n            this.notifyListeners(eventName, arg);\n        });\n    }\n}\n\nconst WebView = /*#__PURE__*/ registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = (str) => encodeURIComponent(str)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = (str) => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nclass CapacitorCookiesPluginWeb extends WebPlugin {\n    async getCookies() {\n        const cookies = document.cookie;\n        const cookieMap = {};\n        cookies.split(';').forEach(cookie => {\n            if (cookie.length <= 0)\n                return;\n            // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n            let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n            key = decode(key).trim();\n            value = decode(value).trim();\n            cookieMap[key] = value;\n        });\n        return cookieMap;\n    }\n    async setCookie(options) {\n        try {\n            // Safely Encoded Key/Value\n            const encodedKey = encode(options.key);\n            const encodedValue = encode(options.value);\n            // Clean & sanitize options\n            const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n            const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n            const domain = options.url != null && options.url.length > 0\n                ? `domain=${options.url}`\n                : '';\n            document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}; ${domain};`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async deleteCookie(options) {\n        try {\n            document.cookie = `${options.key}=; Max-Age=0`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearCookies() {\n        try {\n            const cookies = document.cookie.split(';') || [];\n            for (const cookie of cookies) {\n                document.cookie = cookie\n                    .replace(/^ +/, '')\n                    .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearAllCookies() {\n        try {\n            await this.clearCookies();\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\nconst CapacitorCookies = registerPlugin('CapacitorCookies', {\n    web: () => new CapacitorCookiesPluginWeb(),\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nconst readBlobAsBase64 = async (blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        const base64String = reader.result;\n        // remove prefix \"data:application/pdf;base64,\"\n        resolve(base64String.indexOf(',') >= 0\n            ? base64String.split(',')[1]\n            : base64String);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = (headers = {}) => {\n    const originalKeys = Object.keys(headers);\n    const loweredKeys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n    const normalized = loweredKeys.reduce((acc, key, index) => {\n        acc[key] = headers[originalKeys[index]];\n        return acc;\n    }, {});\n    return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = (params, shouldEncode = true) => {\n    if (!params)\n        return null;\n    const output = Object.entries(params).reduce((accumulator, entry) => {\n        const [key, value] = entry;\n        let encodedValue;\n        let item;\n        if (Array.isArray(value)) {\n            item = '';\n            value.forEach(str => {\n                encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n                item += `${key}=${encodedValue}&`;\n            });\n            // last character will always be \"&\" so slice it off\n            item.slice(0, -1);\n        }\n        else {\n            encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n            item = `${key}=${encodedValue}`;\n        }\n        return `${accumulator}&${item}`;\n    }, '');\n    // Remove initial \"&\" from the reduce\n    return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nconst buildRequestInit = (options, extra = {}) => {\n    const output = Object.assign({ method: options.method || 'GET', headers: options.headers }, extra);\n    // Get the content-type\n    const headers = normalizeHttpHeaders(options.headers);\n    const type = headers['content-type'] || '';\n    // If body is already a string, then pass it through as-is.\n    if (typeof options.data === 'string') {\n        output.body = options.data;\n    }\n    // Build request initializers based off of content-type\n    else if (type.includes('application/x-www-form-urlencoded')) {\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(options.data || {})) {\n            params.set(key, value);\n        }\n        output.body = params.toString();\n    }\n    else if (type.includes('multipart/form-data') ||\n        options.data instanceof FormData) {\n        const form = new FormData();\n        if (options.data instanceof FormData) {\n            options.data.forEach((value, key) => {\n                form.append(key, value);\n            });\n        }\n        else {\n            for (const key of Object.keys(options.data)) {\n                form.append(key, options.data[key]);\n            }\n        }\n        output.body = form;\n        const headers = new Headers(output.headers);\n        headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n        output.headers = headers;\n    }\n    else if (type.includes('application/json') ||\n        typeof options.data === 'object') {\n        output.body = JSON.stringify(options.data);\n    }\n    return output;\n};\n// WEB IMPLEMENTATION\nclass CapacitorHttpPluginWeb extends WebPlugin {\n    /**\n     * Perform an Http request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async request(options) {\n        const requestInit = buildRequestInit(options, options.webFetchExtra);\n        const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n        const url = urlParams ? `${options.url}?${urlParams}` : options.url;\n        const response = await fetch(url, requestInit);\n        const contentType = response.headers.get('content-type') || '';\n        // Default to 'text' responseType so no parsing happens\n        let { responseType = 'text' } = response.ok ? options : {};\n        // If the response content-type is json, force the response to be json\n        if (contentType.includes('application/json')) {\n            responseType = 'json';\n        }\n        let data;\n        let blob;\n        switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n                blob = await response.blob();\n                data = await readBlobAsBase64(blob);\n                break;\n            case 'json':\n                data = await response.json();\n                break;\n            case 'document':\n            case 'text':\n            default:\n                data = await response.text();\n        }\n        // Convert fetch headers to Capacitor HttpHeaders\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            data,\n            headers,\n            status: response.status,\n            url: response.url,\n        };\n    }\n    /**\n     * Perform an Http GET request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async get(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'GET' }));\n    }\n    /**\n     * Perform an Http POST request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async post(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'POST' }));\n    }\n    /**\n     * Perform an Http PUT request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async put(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PUT' }));\n    }\n    /**\n     * Perform an Http PATCH request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async patch(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PATCH' }));\n    }\n    /**\n     * Perform an Http DELETE request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async delete(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'DELETE' }));\n    }\n}\nconst CapacitorHttp = registerPlugin('CapacitorHttp', {\n    web: () => new CapacitorHttpPluginWeb(),\n});\n/******** END HTTP PLUGIN ********/\n\nexport { Capacitor, CapacitorCookies, CapacitorException, CapacitorHttp, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, buildRequestInit, registerPlugin, registerWebPlugin, setPlatform };\n//# sourceMappingURL=index.js.map\n","import { registerPlugin } from '@capacitor/core';\nconst SplashScreen = registerPlugin('SplashScreen', {\n    web: () => import('./web').then(m => new m.SplashScreenWeb()),\n});\nexport * from './definitions';\nexport { SplashScreen };\n//# sourceMappingURL=index.js.map","export var Style;\n(function (Style) {\n    /**\n     * Light text for dark backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Dark\"] = \"DARK\";\n    /**\n     * Dark text for light backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Light\"] = \"LIGHT\";\n    /**\n     * The style is based on the device appearance.\n     * If the device is using Dark mode, the statusbar text will be light.\n     * If the device is using Light mode, the statusbar text will be dark.\n     * On Android the default will be the one the app was launched with.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nexport var Animation;\n(function (Animation) {\n    /**\n     * No animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"None\"] = \"NONE\";\n    /**\n     * Slide animation during show/hide.\n     * It doesn't work on iOS 15+.\n     *\n     * @deprecated Use Animation.Fade or Animation.None instead.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Slide\"] = \"SLIDE\";\n    /**\n     * Fade animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Fade\"] = \"FADE\";\n})(Animation || (Animation = {}));\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\nexport const StatusBarAnimation = Animation;\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\nexport const StatusBarStyle = Style;\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst StatusBar = registerPlugin('StatusBar');\nexport * from './definitions';\nexport { StatusBar };\n//# sourceMappingURL=index.js.map","// CipherWave Mobile Manager - Capacitor integration for mobile platforms\n// Only loaded on mobile devices to reduce bundle size on desktop\n\nimport { Capacitor } from '@capacitor/core';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { StatusBar, Style } from '@capacitor/status-bar';\n\nexport class MobileManager {\n    constructor() {\n        this.platform = Capacitor.getPlatform();\n        this.isNative = Capacitor.isNativePlatform();\n        this.isInitialized = false;\n        \n        // Mobile-specific features\n        this.backgroundMode = false;\n        this.pushNotifications = false;\n        this.hapticFeedback = false;\n        \n        console.log(`📱 Mobile manager initialized for platform: ${this.platform}`);\n    }\n    \n    async initialize() {\n        if (!this.isNative) {\n            console.log('📱 Running in web mode, skipping native features');\n            return;\n        }\n        \n        console.log('📱 Initializing mobile features...');\n        \n        try {\n            // Configure status bar\n            await this.configureStatusBar();\n            \n            // Hide splash screen\n            await this.hideSplashScreen();\n            \n            // Set up mobile-specific UI enhancements\n            this.setupMobileUI();\n            \n            // Set up app lifecycle handlers\n            this.setupAppLifecycle();\n            \n            // Set up hardware back button (Android)\n            this.setupHardwareBackButton();\n            \n            this.isInitialized = true;\n            console.log('✅ Mobile features initialized');\n            \n        } catch (error) {\n            console.error('❌ Failed to initialize mobile features:', error);\n            throw error;\n        }\n    }\n    \n    async configureStatusBar() {\n        try {\n            await StatusBar.setStyle({ style: Style.Dark });\n            await StatusBar.setBackgroundColor({ color: '#0f1419' });\n            await StatusBar.show();\n            \n            console.log('📱 Status bar configured');\n            \n        } catch (error) {\n            console.warn('Failed to configure status bar:', error);\n        }\n    }\n    \n    async hideSplashScreen() {\n        try {\n            await SplashScreen.hide();\n            console.log('📱 Splash screen hidden');\n            \n        } catch (error) {\n            console.warn('Failed to hide splash screen:', error);\n        }\n    }\n    \n    setupMobileUI() {\n        // Add mobile-specific CSS classes\n        document.body.classList.add('mobile-app');\n        document.body.classList.add(`platform-${this.platform}`);\n        \n        // Disable zoom on inputs\n        this.disableZoomOnInputs();\n        \n        // Set up touch optimizations\n        this.setupTouchOptimizations();\n        \n        // Add safe area padding\n        this.addSafeAreaSupport();\n        \n        console.log('📱 Mobile UI enhancements applied');\n    }\n    \n    disableZoomOnInputs() {\n        const viewport = document.querySelector('meta[name=viewport]');\n        if (viewport) {\n            viewport.setAttribute('content', \n                'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'\n            );\n        }\n        \n        // Prevent zoom on input focus\n        const inputs = document.querySelectorAll('input, textarea, select');\n        inputs.forEach(input => {\n            input.addEventListener('focus', () => {\n                input.style.fontSize = '16px';\n            });\n            \n            input.addEventListener('blur', () => {\n                input.style.fontSize = '';\n            });\n        });\n    }\n    \n    setupTouchOptimizations() {\n        // Add touch-friendly styles\n        const style = document.createElement('style');\n        style.textContent = `\n            .mobile-app {\n                -webkit-tap-highlight-color: transparent;\n                -webkit-touch-callout: none;\n                -webkit-user-select: none;\n                user-select: none;\n            }\n            \n            .mobile-app button,\n            .mobile-app .btn {\n                min-height: 44px;\n                min-width: 44px;\n                touch-action: manipulation;\n            }\n            \n            .mobile-app input,\n            .mobile-app textarea {\n                -webkit-user-select: text;\n                user-select: text;\n            }\n            \n            .mobile-app .message {\n                -webkit-user-select: text;\n                user-select: text;\n            }\n            \n            /* Safe area support */\n            .mobile-app {\n                padding-top: env(safe-area-inset-top);\n                padding-bottom: env(safe-area-inset-bottom);\n                padding-left: env(safe-area-inset-left);\n                padding-right: env(safe-area-inset-right);\n            }\n            \n            /* Platform-specific adjustments */\n            .platform-ios .panel {\n                border-radius: 16px;\n            }\n            \n            .platform-android .btn {\n                border-radius: 4px;\n            }\n            \n            /* Improved touch targets */\n            .mobile-app .message-input-group button {\n                padding: 12px 16px;\n            }\n            \n            .mobile-app .voice-btn {\n                min-width: 48px;\n                min-height: 48px;\n            }\n        `;\n        \n        document.head.appendChild(style);\n    }\n    \n    addSafeAreaSupport() {\n        // Add CSS custom properties for safe areas\n        const root = document.documentElement;\n        \n        // Fallback values for browsers that don't support env()\n        root.style.setProperty('--safe-area-inset-top', '0px');\n        root.style.setProperty('--safe-area-inset-right', '0px');\n        root.style.setProperty('--safe-area-inset-bottom', '0px');\n        root.style.setProperty('--safe-area-inset-left', '0px');\n    }\n    \n    setupAppLifecycle() {\n        // Handle app state changes\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                this.onAppBackground();\n            } else {\n                this.onAppForeground();\n            }\n        });\n        \n        // Handle app pause/resume (Capacitor events)\n        document.addEventListener('pause', () => {\n            this.onAppPause();\n        });\n        \n        document.addEventListener('resume', () => {\n            this.onAppResume();\n        });\n    }\n    \n    setupHardwareBackButton() {\n        if (this.platform !== 'android') {\n            return;\n        }\n        \n        document.addEventListener('backbutton', (e) => {\n            e.preventDefault();\n            this.handleHardwareBackButton();\n        });\n    }\n    \n    handleHardwareBackButton() {\n        // Check if there are any modals or overlays open\n        const overlays = document.querySelectorAll('.modal, .overlay, .voice-recording-overlay');\n        \n        if (overlays.length > 0) {\n            // Close the topmost overlay\n            const topOverlay = overlays[overlays.length - 1];\n            const closeButton = topOverlay.querySelector('.close, .cancel, [data-dismiss]');\n            \n            if (closeButton) {\n                closeButton.click();\n            } else {\n                topOverlay.remove();\n            }\n            \n            return;\n        }\n        \n        // Check if connected to a room\n        if (window.cipherWave && window.cipherWave.isConnected) {\n            this.showExitConfirmation();\n        } else {\n            // Exit the app\n            this.exitApp();\n        }\n    }\n    \n    showExitConfirmation() {\n        const confirmation = document.createElement('div');\n        confirmation.className = 'exit-confirmation modal';\n        confirmation.innerHTML = `\n            <div class=\"modal-content\">\n                <h3>Exit CipherWave?</h3>\n                <p>You are currently connected to a chat room. Are you sure you want to exit?</p>\n                <div class=\"modal-buttons\">\n                    <button class=\"btn btn-secondary\" onclick=\"this.closest('.modal').remove()\">\n                        Cancel\n                    </button>\n                    <button class=\"btn btn-primary\" onclick=\"window.mobileManager.exitApp()\">\n                        Exit\n                    </button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(confirmation);\n        \n        // Auto-remove after 10 seconds\n        setTimeout(() => {\n            if (confirmation.parentElement) {\n                confirmation.remove();\n            }\n        }, 10000);\n    }\n    \n    exitApp() {\n        // Disconnect from room if connected\n        if (window.cipherWave && window.cipherWave.isConnected) {\n            window.cipherWave.disconnect();\n        }\n        \n        // Close the app (Android) or go to background (iOS)\n        if (this.platform === 'android') {\n            // For Android, we can't actually close the app from web code\n            // The system will handle it\n            navigator.app?.exitApp?.();\n        }\n        \n        // For iOS, apps don't typically exit, they go to background\n        // The system handles this automatically\n    }\n    \n    onAppBackground() {\n        console.log('📱 App went to background');\n        this.backgroundMode = true;\n        \n        // Reduce activity to preserve battery\n        this.reduceBackgroundActivity();\n    }\n    \n    onAppForeground() {\n        console.log('📱 App came to foreground');\n        this.backgroundMode = false;\n        \n        // Resume normal activity\n        this.resumeNormalActivity();\n    }\n    \n    onAppPause() {\n        console.log('📱 App paused');\n        \n        // Save any pending data\n        this.savePendingData();\n    }\n    \n    onAppResume() {\n        console.log('📱 App resumed');\n        \n        // Restore app state\n        this.restoreAppState();\n    }\n    \n    reduceBackgroundActivity() {\n        // Reduce refresh rates, pause animations, etc.\n        if (window.cipherWave && window.cipherWave.connectionManager) {\n            // Reduce ping frequency when in background\n            // This would be implemented in the connection manager\n        }\n    }\n    \n    resumeNormalActivity() {\n        // Resume normal refresh rates and activities\n        if (window.cipherWave && window.cipherWave.connectionManager) {\n            // Resume normal ping frequency\n            // This would be implemented in the connection manager\n        }\n    }\n    \n    savePendingData() {\n        // Save any unsent messages or draft content\n        const messageInput = document.getElementById('message-input');\n        if (messageInput && messageInput.value.trim()) {\n            localStorage.setItem('cipherwave_draft_message', messageInput.value);\n        }\n    }\n    \n    restoreAppState() {\n        // Restore draft messages\n        const draftMessage = localStorage.getItem('cipherwave_draft_message');\n        if (draftMessage) {\n            const messageInput = document.getElementById('message-input');\n            if (messageInput) {\n                messageInput.value = draftMessage;\n            }\n            localStorage.removeItem('cipherwave_draft_message');\n        }\n    }\n    \n    // Haptic feedback for supported devices\n    async hapticFeedback(type = 'light') {\n        if (!this.isNative) {\n            return;\n        }\n        \n        try {\n            // Try to use Capacitor Haptics plugin if available\n            if (window.Capacitor?.Plugins?.Haptics) {\n                const { Haptics, ImpactStyle } = window.Capacitor.Plugins;\n                \n                const styles = {\n                    light: ImpactStyle.Light,\n                    medium: ImpactStyle.Medium,\n                    heavy: ImpactStyle.Heavy\n                };\n                \n                await Haptics.impact({ style: styles[type] || styles.light });\n            }\n        } catch (error) {\n            console.warn('Haptic feedback not available:', error);\n        }\n    }\n    \n    // Show native toast message\n    async showToast(message, duration = 'short') {\n        if (!this.isNative) {\n            // Fallback to web notification\n            this.showWebToast(message);\n            return;\n        }\n        \n        try {\n            if (window.Capacitor?.Plugins?.Toast) {\n                const { Toast } = window.Capacitor.Plugins;\n                await Toast.show({\n                    text: message,\n                    duration: duration\n                });\n            }\n        } catch (error) {\n            console.warn('Native toast not available:', error);\n            this.showWebToast(message);\n        }\n    }\n    \n    showWebToast(message) {\n        const toast = document.createElement('div');\n        toast.className = 'web-toast';\n        toast.textContent = message;\n        toast.style.cssText = `\n            position: fixed;\n            bottom: 100px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: rgba(0, 0, 0, 0.8);\n            color: white;\n            padding: 12px 24px;\n            border-radius: 25px;\n            font-size: 14px;\n            z-index: 10000;\n            animation: toastIn 0.3s ease-out;\n        `;\n        \n        document.body.appendChild(toast);\n        \n        setTimeout(() => {\n            toast.style.animation = 'toastOut 0.3s ease-in';\n            setTimeout(() => toast.remove(), 300);\n        }, 2000);\n    }\n    \n    // Get device information\n    getDeviceInfo() {\n        return {\n            platform: this.platform,\n            isNative: this.isNative,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            },\n            pixelRatio: window.devicePixelRatio || 1,\n            language: navigator.language,\n            online: navigator.onLine\n        };\n    }\n    \n    // Check if device supports feature\n    supportsFeature(feature) {\n        const features = {\n            webrtc: !!window.RTCPeerConnection,\n            websocket: !!window.WebSocket,\n            notifications: 'Notification' in window,\n            geolocation: 'geolocation' in navigator,\n            mediaDevices: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),\n            serviceWorker: 'serviceWorker' in navigator,\n            indexedDB: 'indexedDB' in window,\n            localStorage: 'localStorage' in window\n        };\n        \n        return features[feature] || false;\n    }\n    \n    destroy() {\n        // Clean up event listeners\n        document.removeEventListener('visibilitychange', this.onAppBackground);\n        document.removeEventListener('pause', this.onAppPause);\n        document.removeEventListener('resume', this.onAppResume);\n        document.removeEventListener('backbutton', this.handleHardwareBackButton);\n        \n        // Remove mobile classes\n        document.body.classList.remove('mobile-app', `platform-${this.platform}`);\n        \n        this.isInitialized = false;\n        console.log('🗑️ Mobile manager destroyed');\n    }\n}\n\n// Make mobile manager globally accessible\nwindow.mobileManager = null;","import { WebPlugin } from '@capacitor/core';\nexport class SplashScreenWeb extends WebPlugin {\n    async show(_options) {\n        return undefined;\n    }\n    async hide(_options) {\n        return undefined;\n    }\n}\n//# sourceMappingURL=web.js.map"],"file":"assets/chunk-CGihlwpU.js"}